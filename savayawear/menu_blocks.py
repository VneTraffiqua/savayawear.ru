from telegram import ReplyKeyboardMarkup


def start_block(update):
    reply_keyboard = [['üìÜ –ü—Ä–æ–≥—Ä–∞–º–º–∞', '‚ùî–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–∏–∫–µ—Ä—É']]

    update.message.reply_text(
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç savayawear. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n\n'
        '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏, , –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å?',

        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard,
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )


def programs_block(update):
    programs = get_programs_list()
    programs_text = [f"{program_number}. {program}\n" for
                     program_number, program in enumerate(programs, start=1)]
    programs.append("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    update.message.reply_text(
        '–°–µ–≥–æ–¥–Ω—è —É –Ω–∞—Å –ø—Ä–æ—Ö–æ–¥—è—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n\n'
        f'{"".join(programs_text)}\n\n'
        f'–ö–∞–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞?',
        reply_markup=ReplyKeyboardMarkup(
            keyboard=list(chunked(programs, 2)),
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )


def performance_block(performances_list, context,
                      user_is_back=False, user_choice=None):
    performances = []
    for perforamnce_id, performance in enumerate(performances_list,
                                                 start=1):
        performance_name = performance.name
        performance_time = performance.time
        performance = f'{perforamnce_id}. {performance_name}\n' \
                      f'–í—Ä–µ–º—è: {performance_time}\n\n'
        performances.append(performance)

    if user_is_back:
        text = f"–£ –ø—Ä–æ–≥—Ä–∞–º–º—ã ¬´{context.user_data['performance']}¬ª " \
               f"–±—É–¥—É—Ç —Å–ª–µ–¥—É—é—â–∏–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è:\n\n" \
               f"{''.join(performances)}\n" \
               f"–ü—Ä–æ –∫–∞–∫–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å —É–∑–Ω–∞—Ç—å –ø–æ–±–æ–ª—å—à–µ?"
    else:
        text = f"–£ –ø—Ä–æ–≥—Ä–∞–º–º—ã ¬´{user_choice}¬ª –±—É–¥—É—Ç —Å–ª–µ–¥—É—é—â–∏–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è:\n\n" \
               f"{''.join(performances)}\n" \
               f"–ü—Ä–æ –∫–∞–∫–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤–∞–º –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å —É–∑–Ω–∞—Ç—å –ø–æ–±–æ–ª—å—à–µ?"

    performances = [performance.name for performance in
                    performances_list]
    performances.append("–ù–∞–∑–∞–¥")

    return performances, text
